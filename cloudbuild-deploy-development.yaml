steps:

- name: gcr.io/cloud-builders/docker
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA', '.']

- name: 'gcr.io/cloud-builders/docker'
  id: 'Push image to Container Registry'
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA'

- name: gcr.io/$PROJECT_ID/cloudbuild-attestor
  id: 'Check Vulnerability Scan results'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
     /scripts/check_vulnerabilities.sh -p $PROJECT_ID -i gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA -t 5

- name: 'gcr.io/$PROJECT_ID/cloudbuild-attestor'
  id: 'Attest Vulnerability Scan'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |-
      FQ_DIGEST=$(gcloud container images describe --format 'value(image_summary.fully_qualified_digest)' gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA)
      /scripts/create_attestation.sh \
        -p "$PROJECT_ID" \
        -i "$${FQ_DIGEST}" \
        -a "$_VULNZ_ATTESTOR" \
        -v "$_VULNZ_KMS_KEY_VERSION" \
        -k "$_VULNZ_KMS_KEY" \
        -l "$_KMS_LOCATION" \
        -r "$_KMS_KEYRING"

- name: gcr.io/cloud-builders/kubectl
  args: [ 'version' ]
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=europe-west2-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=next2019-development'
  - 'CLOUDSDK_CORE_PROJECT=$PROJECT_ID'

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Generate Kubernetes manifest'
  entrypoint: /bin/sh
  args:
  - '-c'
  - |-
      DIGEST=$(gcloud container images describe --format 'value(image_summary.digest)' gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA)
      sed "s/DIGEST/$${DIGEST}/g" > deployment.yaml

- name: gcr.io/cloud-builders/kubectl
  entrypoint: '/bin/sh'
  args:
    - -c
    - >
      kubectl apply -f deployment.yaml

images: [ 'gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA' ]

substitutions:
  _IMAGE: nginx-alpine-dev
